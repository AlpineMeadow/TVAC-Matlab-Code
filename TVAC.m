% Auto-generated by Data Acquisition Toolbox Analog Input Recorder on 09-Jan-2020 13:58:11
close all; clc; clearvars; 
clear all;

%% Create Data Acquisition Session
TVACDAQ.s = daq('ni');

%Set the sample rate.  The rate is given in samples/second.  
sampleRate = 1;
TVACDAQ.s.Rate = sampleRate;

%Set the frequency at which the ScansAvailableFcn is called.  If the sample
%rate is 10 samples per second and I set ScansAvailableFcnCount = 600 then
%the ScansAvailableFcn callback will be called once per minute.((10 samples/sec)*60 sec = 600.)
TVACDAQ.s.ScansAvailableFcnCount = 1;

%Set the callback function.
TVACDAQ.s.ScansAvailableFcn = @(src, evt) plotAvailableData(src, evt);

%Input the device ID.
TVACDAQ.dev = 'Dev1';

%Set up some input values and measurement types.
inputChannelOneID = 'ai0';  %Connects the NIDAC connector AI0 to the matlab code.
inputChannelTwoID = 'ai1';  %Connects the NIDAC connector AI1 to the matlab code.
inputChannelThreeID = 'ai2';  %Connects the NIDAC connector AI2 to the matlab code.
inputChannelFourID = 'ai3';  %Connects the NIDAC connector AI3 to the matlab code.

measurementType = 'Voltage';

%Add input(to the NIDAQ box-i.e. input from instrument, not computer.) channel one.
TVACDAQ.inputChannelOne = addinput(TVACDAQ.s, TVACDAQ.dev, inputChannelOneID, measurementType); 
TVACDAQ.inputChannelOne.TerminalConfig = 'SingleEnded';

%Add input(to the NIDAQ box- i.e. input from the instrument, not computer.) channel two.
TVACDAQ.inputChannelTwo = addinput(TVACDAQ.s, TVACDAQ.dev, inputChannelTwoID, measurementType); 
TVACDAQ.inputChannelTwo.TerminalConfig = 'SingleEnded';

%Add input(to the NIDAQ box-i.e. input from instrument, not computer.) channel one.
TVACDAQ.inputChannelThree = addinput(TVACDAQ.s, TVACDAQ.dev, inputChannelThreeID, measurementType); 
TVACDAQ.inputChannelThree.TerminalConfig = 'SingleEnded';

%Add input(to the NIDAQ box- i.e. input from the instrument, not computer.) channel two.
TVACDAQ.inputChannelFour = addinput(TVACDAQ.s, TVACDAQ.dev, inputChannelFourID, measurementType); 
TVACDAQ.inputChannelFour.TerminalConfig = 'SingleEnded';

%Get the GUI handles and run the program through the GUI handles.
handles = getTVACHandles(TVACDAQ);
